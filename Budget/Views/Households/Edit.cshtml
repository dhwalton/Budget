@model Budgeter.Models.HouseholdEditViewModel


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <div class="container">
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm("Create", "Transactions", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Household</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Household.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Household.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Household.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Household.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Household.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Household.OwnerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Active)
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Demo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Demo)
                                @Html.ValidationMessageFor(model => model.Demo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            @Html.Partial("_HouseholdBudgets")
        </div>
    </div>
</div>


    <hr />
    @Html.Partial("_Invite", Model.Household)
    <hr />
    @Html.Partial("_HouseholdUsers", Model.Household)
    <hr />
    @Html.Partial("_HouseholdAccounts")
    <hr />
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

<div id="closed-accounts-modal">
    <table class="user-list data-table">
        <thead>
            <tr><th>Name</th><th>Owner</th><th>Action</th></tr>
        </thead>
        <tbody>
            @foreach (var account in Model.InactiveAccounts)
            {
                <tr>
                    <td>@account.Name</td>
                    <td>@account.Owner.DisplayName</td>
                    <td>
                        <span class="add-user">@Html.ActionLink("Open", "ToggleAccount", "Accounts", new { id = account.Id }, null)</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@Scripts.Render("~/js/Household.js")
@Scripts.Render("~/Scripts/Donny-Invite.js")
