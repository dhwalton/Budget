@model Budgeter.Models.HouseholdEditViewModel


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="light content-col auto-height">
                <h4>Income</h4>
                <hr />
                <span class="balance">
                    @Model.HouseholdIncome.ToString("$0.00")
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="light content-col auto-height">
                <h4>Expenses</h4>
                <hr />
                <span class="balance negative-balance">
                    @Model.HouseholdExpenses.ToString("$0.00")
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="light content-col auto-height">
                <h4>On Hand</h4>
                <hr />
                @{ var onHand = Model.HouseholdExpenses + Model.HouseholdIncome; }
                @if ( onHand <= 0)
                {
                    <span class="balance negative-balance">
                        @onHand.ToString("$0.00")
                    </span>
                }
                else
                {
                    <span class="balance">
                        @onHand.ToString("$0.00")
                    </span>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="light content-col">
            @using (Html.BeginForm("Create", "Transactions", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Household Info</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Household.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Household.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Household.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Household.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Household.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Household.OwnerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
        <div class="col-md-3">
            <div class="light content-col">
                @Html.Partial("_HouseholdBudgets")
            </div>
        </div>
        <div class="col-md-5">
            <div class="light content-col">
                @Html.Partial("_HouseholdUsers", Model.Household)
                @if (ViewBag.CurrentUserId == Model.Household.OwnerId)
                {
                    @Html.Partial("_Invite",Model.Household)
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="content-col light">
                <h4>Chart</h4>
                <hr />
                <div id="chart1">
                    @* Chart goes here *@
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="content-col light">
                @Html.Partial("_HouseholdAccounts")
            </div>
        </div>
    </div>
</div>
    

    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
<div id="chart-modal" class="content-col light">
    
</div>

<div id="closed-accounts-modal" class="content-col light">
    <table class="user-list data-table">
        <thead>
            <tr><th>Name</th><th>Owner</th><th>Action</th></tr>
        </thead>
        <tbody>
            @foreach (var account in Model.InactiveAccounts)
            {
                <tr>
                    <td>@account.Name</td>
                    <td>@account.Owner.DisplayName</td>
                    <td>
                        <span class="add-user">@Html.ActionLink("Open", "ToggleAccount", "Accounts", new { id = account.Id }, null)</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@Scripts.Render("~/js/Household.js")
@Scripts.Render("~/Scripts/Donny-Invite.js")

@section scripts {
    <script>
        $(document).ready(function () {
            $.get('@Url.Action("GetChart","Households", new { householdId = Model.Household.Id })').then(function (response) {
                new Morris.Bar({
                    element: 'chart1',
                    data: response.bar,
                    xkey: 'Name',
                    ykeys: ['Actual', 'Budgeted'],
                    labels: ['Expenses to Date', 'Amount Budgeted'],
                    resize: true
                });
            });
        })
    </script>    
}
