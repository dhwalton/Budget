@model Budgeter.Models.AccountEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Account.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Account.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account.HouseholdId, "HouseholdId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("HouseholdId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Account.HouseholdId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Account.OwnerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <label class="control-label col-md-2">
                    @Model.Account.BalanceAmt().ToString("$0.00")
                    @if (Model.Account.BalanceAmt() < 0)
                    {
                        <span class="overdraft-alert">OVERDRAFT!!!</span>
                    }
                </label>
                @*@Html.EditorFor(model => model.Account.Balance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account.Balance, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Account.Active)
                    @Html.ValidationMessageFor(model => model.Account.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account.ReconciledBalance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account.ReconciledBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account.ReconciledBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
} 

@Html.Partial("_AccountTransactions",Model.ActiveTransactions)

<div>
    @Html.ActionLink("Back to Household", "Edit", "Households", new { id = Model.Account.HouseholdId }, null)
</div>
<hr />

@* Modal to add a withdrawal transaction *@
<div id="add-withdrawal-modal">
    <h3>Make a Withdrawal:</h3>
    @Html.Action("Create", "Transactions", new { accountId = Model.Account.Id })
</div>

@* Modal to add a deposit transaction *@
<div id="add-deposit-modal">
    <h3>Make a Deposit:</h3>
    @Html.Action("Create", "Transactions", new { accountId = Model.Account.Id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            
            $('#btn-withdrawal').click(function () {
                $('#add-withdrawal-modal').modal();
            });

            $('#btn-deposit').click(function () {
                $('#add-deposit-modal').modal();
            });

        });
    </script>
}
